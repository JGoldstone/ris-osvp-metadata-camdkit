# Example JSON packets for OpenTrackIO - camera tracking data for OSVP

# Notes:
# - This specifically only describes data that may change every frame (hence no 'vendor' etc)
# - There are a number of weaknesses in FreeD that this seeks to address, but it is not
#	 necessarily a replacement for it.
# - The lens distortion model is currently generic to support multiple vendors' models, but
#	 the intention is that a future version will enforce the OpenLensIO model
# - Euler angles are used - for reasoning see metadata spreadsheet and OTP reference
# - For detailed description of the fields, units etc see theaccompanying documentation

# Next steps:
# - Finalise the model addressing the various questions below
# - Generate the JSON Schema from CamDKit and review

# OPENTRACKIO

# Simple packet example (without comments and valid json, generated by CamDKit Mo-Sys reader)
{
	"lens": {
		"centreShift": {
			"cx": -7.783590793609619,
			"cy": 6.896144866943359
		},
		"distortion": {
			"radial": [
				0.15680991113185883,
				-0.0881580114364624
			]
		},
		"encoders": {
			"focus": 0.7643280029296875,
			"zoom": 0.0014190673828125
		},
		"entrancePupilPosition": {
			"num": 628748875,
			"denom": 4194304
		},
		"focalLength": 22.349149145829326,
		"focusPosition": 2313
	},
	"metadata": {
		"recording": true,
		"status": "Optical Good"
	},
	"packetId": "urn:uuid:02c935c7-f098-41b6-ab4e-6796068ae362",
	"protocol": "OpenTrackIO_0.1.0",
	"timing": {
		"frameRate": 25.0,
		"mode": "internal",
		"sequenceNumber": 1,
		"synchronization": {
			"frequency": 25.0,
			"locked": true,
			"source": "genlock"
		},
		"timecode": {
			"hours": 15,
			"minutes": 3,
			"seconds": 47,
			"frames": 12,
			"format": "25"
		}
	},
	"transforms": [
		{
			"translation": {
				"x": -8.121,
				"y": -185.36,
				"z": 119.803
			},
			"rotation": {
				"pan": -2.969,
				"tilt": -28.03,
				"roll": 3.1
			},
			"name": "Camera 0"
		}
	]
}

# Complex packet example with notes and discussion points (generated by CamDKit generate_example.py)
{
	"lens": {
		"centreShift": {
			"cx": 1.0,
			"cy": 2.0
		},
		"custom": [
			0.2,
			0.3
		],
		"distortion": {
		"radial": [
			1.0,
			2.0,
			3.0
		],
		"tangential": [
			1.0,
			2.0
		]
		},
		"encoders": {						# TODO SR to ask Alejandro why he recommended sending raw and normalised
			"focus": 0.1,
			"iris": 0.2,
			"zoom": 0.3
		},
		"entrancePupilPosition": {			# In CamDKit units are mm - why not m?
			"num": 10,						# Why is this not just a Real number?
			"denom": 1
		},
		"exposureFalloff": {
			"a1": 1.0,
			"a2": 2.0,
			"a3": 3.0
		},
		"fStop": 4000,						# In CamDKit units of 0.001 are used - JU TODO find ref for why
		"focalLength": 24.0,
		"focusPosition": 1000, 				# In CamDKit units are mm - why not m?
		"fovScale": {
			"horizontal": 1.0,
			"vertical": 1.0
		},
		"perspectiveShift": {				# Does this cover all use cases until we have the mathematical representation from OpenLensIO?
			"Cx": 0.1,
			"Cy": 0.2
		},
		"tStop": 4100
	},
	"metadata": {
		"globalStage": {
			"E": 100.0,
			"N": 200.0,
			"U": 300.0,
			"lat0": 100.0,
			"lon0": 200.0,
			"h0": 300.0
		},
		"notes": "Example generated packet.",
		"recording": false,
		"relatedPackets": [
			"urn:uuid:092bd11a-a435-449d-a9cf-1b9c342f4f1f",
			"urn:uuid:ad967ca4-4713-4ddf-8b26-f36dbaf970ab"
		],
		"slate": "A101_A_4",
		"status": "Optical Good"
	},
	"packetId": "urn:uuid:83b7704f-a4e6-4e63-a777-649e69ab5e77",	# MB Should this be a DUID?
	"protocol": "OpenTrackIO_0.1.0",
	"timing": {
		"frameRate": 23.976,
		"mode": "internal",
		"recordedTimestamp": {
			"seconds": 1718806000,
			"nanoseconds": 0
		},
		"sequenceNumber": 0,
		"synchronization": {
			"frequency": 23.976,
			"locked": true,
			"source": "ptp",
			"ptp_master": "00:11:22:33:44:55",
			"ptp_offset": 0.0,
			"ptp_domain": 1,
			"offsets": {
				"translation": 1.0,
				"rotation": 2.0,
				"encoders": 3.0
			},
			"enabled": true				# MB Sync may be present, but not active
										# JU would that not just set the locked flag false? Still not clear how this is different from 'locked'
		},
		"timecode": {
			"hours": 1,
			"minutes": 2,
			"seconds": 3,
			"frames": 4,
			"format": "24D"
		},
		"timestamp": {
			"seconds": 1718806554,
			"nanoseconds": 0,
			"attoseconds": 0
		}
	},
	# JU Note this example shows a linked-list transform chain, but often there will just be one named "Camera"
	"transforms": [
		{
			"translation": {
				"x": 1.0,				# SR how to handle more than 3 axis? In a second transform sufficient?
				"y": 2.0,
				"z": 3.0
			},
			"rotation": {
				"pan": 0,
				"tilt": 0,
				"roll": 0
			},
			"name": "Dolly"
		},
		{
			"translation": {
				"x": 1.0,
				"y": 2.0,
				"z": 3.0
			},
			"rotation": {
				"pan": 1.0,
				"tilt": 2.0,
				"roll": 3.0
			},
			"scale": {
				"x": 1.0,
				"y": 2.0,
				"z": 3.0
			},
			"name": "Crane Arm",
			"parent": "Dolly"			# JU The geometry chain can be constructed from this field
		},
		{
			"translation": {
				"x": 1.0,
				"y": 2.0,
				"z": 3.0
			},
			"rotation": {
				"pan": 1.0,
				"tilt": 2.0,
				"roll": 3.0
			},
			"scale": {
				"x": 1.0,
				"y": 2.0,
				"z": 3.0
			},
			"name": "Camera",
			"parent": "Crane Arm"
		}
	]
	# Example custom data that could be added for a particular application and consumers can happily ignore
	"virtualCamera": {
		"pot1": 2435,
		"button1": false
	}
}
